syntax = "proto3";

package vs;

// Pose
message pose_t {
  int64 utime = 1;
  repeated double pos = 2;
  repeated double vel = 3;
  repeated double orientation = 4;
  repeated double rotation_rate = 5;
  repeated double accel = 6;
}

// Objects
message obj_t {
  int64 id = 1;
  double x = 2;
  double y = 3;
  double z = 4;
  double yaw = 5;
  double pitch = 6;
  double roll = 7;
}

message obj_collection_t {
  int32 id = 1;
  string name = 2;
  bool reset = 3;

  enum obj_type {
    POSE = 0;
    TREE = 1;
    SQUARE = 2;
    POSE3D = 3;
    AXIS3D = 4;
    TAG = 5;
    CAMERA = 6;
    TRIANGLE = 7;
    HEXAGON = 8;
    SONARCONE = 9;
  }

  obj_type type = 4;
  repeated obj_t objs = 5;
  int32 nobjs = 6;
  
}

// Reset 
message reset_collections_t {
}

// PointClouds
message point3d_t {
  double x = 1;
  double y = 2;
  double z = 3; 
}

message color_t {
  float r = 1;
  float g = 2;
  float b = 3;
}

message point3d_list_t {
  int64 id = 1;
  int32 collection = 2;
  int64 element_id = 3;
  repeated double points = 4 [packed = true];
  repeated float colors = 5 [packed = true];
  repeated double normals = 6 [packed = true];
  repeated int64 pointids = 7 [packed = true];
  int32 npoints = 8;
  int32 ncolors = 9;
  int32 nnormals = 10;
  int32 npointids = 11;
}

message point3d_list_collection_t {
  int32 id = 1;
  string name = 2;

  enum point_type {
    POINT = 0;
    LINE_STRIP = 1;
    LINE_LOOP = 2;
    LINES = 3;
    TRIANGLE_STRIP = 4;
    TRIANGLE_FAN = 5;
    TRIANGLES = 6;
    QUAD_STRIP = 7;
    QUADS = 8;
    POLYGON = 9;
  }
  point_type type = 3;
  bool reset = 4;
  repeated point3d_list_t point_lists = 5;
  int32 nlists = 6;
}

// Cov
message cov_t {
  int64 id = 1;
  int32 collection = 2;
  int64 element_id = 3;
  repeated double entries = 4; 
}

message cov_collection_t {
  int32 id = 1;
  string name = 2;
  bool reset = 3;
  repeated cov_t covs = 4;
}

// Text 

message text_t {
  int64 id = 1;
  int32 collection_id = 2;
  int64 object_id = 3;
  string text = 4; 
}

message text_collection_t {
  int32 id = 1;
  string name = 2;
  // int16 type = 3; // not required
  bool reset = 4;
  repeated text_t texts = 5; 
}
